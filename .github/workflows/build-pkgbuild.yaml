name: build packages

on:
  push:
    branches:
      - main
    paths:
      - "pkgbuilds/**"
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main # use main branch to get latest pkgbuild changes

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: cache-date
        with:
          format: "YYYYMMDD"
          utcOffset: "+08:00"

      - name: Extract Telegram Version
        id: tg-version
        run: echo "pkgver=$(grep -Po 'pkgver=\K[^ ]+' pkgbuilds/telegram-desktop-sakari/PKGBUILD)" >> "$GITHUB_OUTPUT"

      - name: Download releases
        uses: robinraju/release-downloader@v1
        continue-on-error: true
        with:
          tag: "repo"
          fileName: "*"
          out-file-path: "release"
          tarBall: false
          zipBall: false

      - name: Restore ccache
        id: cache-ccache-restore
        uses: actions/cache@v4
        with:
          path: |
            ccache
          key: ccache

      - name: Restore build cache
        id: cache-build-restore
        uses: actions/cache@v4
        with:
          path: |
            pkgbuilds/telegram-desktop-sakari/src/build
          key: build-v${{ steps.tg-version.outputs.pkgver }}

      - name: Build packages
        uses: sakarie9/arch-repo-builder@main

      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: repo
          fail-if-no-release: false
          fail-if-no-assets: false
          assets: |
            *.db
            *.files
            *.gz
            *.zst

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/*
          tag: repo
          overwrite: true
          file_glob: true
          #prerelease: true
          #release_name: ${{ steps.current-time.outputs.formattedTime }}
          release_name: repo
