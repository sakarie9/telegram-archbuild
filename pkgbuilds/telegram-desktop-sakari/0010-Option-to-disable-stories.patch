From 14c17b16c38003dfd365622832e2e7e7b60ab339 Mon Sep 17 00:00:00 2001
From: Sakari <20642596+sakarie9@users.noreply.github.com>
Date: Sun, 27 Jul 2025 17:47:36 +0800
Subject: [PATCH] Option-to-disable-stories

---
 Telegram/SourceFiles/data/data_stories.cpp    | 19 +++++++++++++++++++
 Telegram/SourceFiles/data/data_stories.h      |  2 ++
 .../settings/settings_experimental.cpp        |  2 ++
 3 files changed, 23 insertions(+)

diff --git a/Telegram/SourceFiles/data/data_stories.cpp b/Telegram/SourceFiles/data/data_stories.cpp
index 03732644e..8a4aa57f9 100644
--- a/Telegram/SourceFiles/data/data_stories.cpp
+++ b/Telegram/SourceFiles/data/data_stories.cpp
@@ -7,6 +7,8 @@ https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
 */
 #include "data/data_stories.h"
 
+#include "api/api_report.h"
+#include "base/options.h"
 #include "base/unixtime.h"
 #include "apiwrap.h"
 #include "core/application.h"
@@ -48,6 +50,13 @@ constexpr auto kPollingViewsPerPage = Story::kRecentViewersMax;
 
 using UpdateFlag = StoryUpdate::Flag;
 
+base::options::toggle DisableStories({
+	.id = kOptionDisableStories,
+	.name = "Disable stories",
+	.description = "Disable whole stories anti-feature.",
+	.defaultValue = true,
+});
+
 [[nodiscard]] std::optional<StoryMedia> ParseMedia(
 		not_null<Session*> owner,
 		const MTPMessageMedia &media) {
@@ -95,6 +104,8 @@ std::vector<StoryId> RespectingPinned(const StoriesIds &ids) {
 	return result;
 }
 
+const char kOptionDisableStories[] = "disable-stories";
+
 StoriesSourceInfo StoriesSource::info() const {
 	return {
 		.id = peer->id,
@@ -369,6 +380,10 @@ void Stories::clearArchive(not_null<PeerData*> peer) {
 void Stories::parseAndApply(
 		const MTPPeerStories &stories,
 		ParseSource source) {
+	if (DisableStories.value()) {
+		return;
+	}
+
 	const auto &data = stories.data();
 	const auto peerId = peerFromMTP(data.vpeer());
 	const auto already = _readTill.find(peerId);
@@ -613,6 +628,10 @@ void Stories::savedStateChanged(not_null<Story*> story) {
 }
 
 void Stories::loadMore(StorySourcesList list) {
+	if (DisableStories.value()) {
+		return;
+	}
+
 	const auto index = static_cast<int>(list);
 	if (_loadMoreRequestId[index] || _sourcesLoaded[index]) {
 		return;
diff --git a/Telegram/SourceFiles/data/data_stories.h b/Telegram/SourceFiles/data/data_stories.h
index 2c0da0750..46cf259b5 100644
--- a/Telegram/SourceFiles/data/data_stories.h
+++ b/Telegram/SourceFiles/data/data_stories.h
@@ -30,6 +30,8 @@ struct StoryIdDates;
 class Story;
 class StoryPreload;
 
+extern const char kOptionDisableStories[];
+
 struct StoriesIds {
 	base::flat_set<StoryId, std::greater<>> list;
 	std::vector<StoryId> pinnedToTop;
diff --git a/Telegram/SourceFiles/settings/settings_experimental.cpp b/Telegram/SourceFiles/settings/settings_experimental.cpp
index 7b04129a2..acad24a19 100644
--- a/Telegram/SourceFiles/settings/settings_experimental.cpp
+++ b/Telegram/SourceFiles/settings/settings_experimental.cpp
@@ -19,6 +19,7 @@ https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
 #include "core/application.h"
 #include "core/launcher.h"
 #include "chat_helpers/tabbed_panel.h"
+#include "data/data_stories.h"
 #include "dialogs/dialogs_widget.h"
 #include "history/history_item_components.h"
 #include "info/profile/info_profile_actions.h"
@@ -142,6 +143,7 @@ void SetupExperimental(
 				: rpl::producer<>()));
 	};
 
+	addToggle(Data::kOptionDisableStories);
 	addToggle(ChatHelpers::kOptionTabbedPanelShowOnClick);
 	addToggle(Dialogs::kOptionForumHideChatsList);
 	addToggle(Core::kOptionFractionalScalingEnabled);
-- 
2.50.1

